@model RestaurantFinder.Models.Restaurant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Restaurant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-12">
            <div class="card-box">
                <div class="row">
                    <div class="col-lg-6">
                        <div>
                            <h4 class="header-title">Update Resturant</h4>
                            <p class="sub-header">
                                .
                            </p>

                            <form method="post" id="editform" class="parsley-examples" data-parsley-validate novalidate>
                                <div class="form-group">
                                    <input type="hidden" class="form-control" name="id" value="@Model.ID" />
                                    <label for="userName">Resturant Name<span class="text-danger">*</span></label>
                                    <input type="text" readonly name="Name" value="@Model.Name" parsley-trigger="change" required
                                           placeholder="Enter user name" class="form-control" id="userName">
                                </div>
                                <div class="form-group">
                                    <label for="emailAddress">AddressLine1<span class="text-danger">*</span></label>
                                    <input type="text" name="AddressLine1" parsley-trigger="change" required
                                           placeholder="AddressLine1" value="@Model.AddressLine1" class="form-control" id="emailAddress">
                                </div>
                                <div class="form-group">
                                    <label for="pass1">AddressLine1<span class="text-danger">*</span></label>
                                    <input id="pass1" type="text" name="AddressLine2" value="@Model.AddressLine2" placeholder="AddressLine1" required
                                           class="form-control">
                                </div>
                                <div class="form-group">
                                    <label for="passWord2">Area <span class="text-danger">*</span></label>
                                    <input data-parsley-equalto="#pass1" name="Area" type="text" required
                                           placeholder="Area" class="form-control" value="@Model.Area" id="passWord2">
                                </div>
                                <div class="form-group">
                                    <label for="passWord2">PinCode <span class="text-danger">*</span></label>
                                    <input data-parsley-equalto="#pass1" name="PinCode" value="@Model.PinCode" type="text" required
                                           placeholder="PinCode" class="form-control" id="passWord2">
                                </div>

                                <div class="form-group">
                                    <label for="passWord2">State <span class="text-danger">*</span></label>
                                    <input data-parsley-equalto="#pass1" name="State" type="text" required
                                           placeholder="State" class="form-control" value="@Model.State" id="passWord2">
                                </div>
                                <br />

                                <div class="form-group">
                                    <label for="passWord2"> <span class="text-danger">*</span></label>
                                    <input data-parsley-equalto="#pass1" name="City" value="@Model.City" type="text" required
                                           placeholder="City" class="form-control" id="passWord2">
                                    <input data-parsley-equalto="#pass1" name="IsActive" value="@Model.IsActive" type="hidden" required />

                                </div> <label>
                                    Image Upload
                                </label>
                                <input id="Resturantpicture" type="file" class="form-control" name="imagefile" multiple />
                                <br />
                                <div id="picturearea">
                                    @if (Model.ThumbnailImageUrl == null)
                                    {
                                        <h2 style="color:red">Please Upload Restaurant Image</h2>
                                    }
                                    else
                                    {
                                        <img src="@Url.Content(Model.ThumbnailImageUrl)" height="100 " width="200">
                                    }
                                </div>

                                <input type="hidden" name="RestaurantsImages" id="picid" />



                                <div class="form-group text-right mb-0">
                                    <button class="btn btn-primary waves-effect waves-light mr-1" type="submit">
                                        Submit
                                    </button>
                                    <button type="reset" class="btn btn-secondary waves-effect">
                                        Cancel
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                    

                </div>
            </div><!-- end col-->
        </div>
       </div>
        }
        <div id="imagetemplate" style="display:none">
            <img class='image img-fluid ' src='' height="50px" width="50px " />
        </div>
        <!-- end row -->
        @section scripts{
            <script>
     $("#Resturantpicture").change(function () {
        debugger;

        var Pictures = this.files;
        var PicsData = new FormData();
        for (var i = 0; i < Pictures.length; i++) {
            PicsData.append("Picture", Pictures[i]);
        }

        $.ajax(
            {
                url:"@Url.Action("UploadPicture","RestaurantPicture")",
                type: "post",
                data: PicsData,
                dataType: "json",
                processData: false,
                contentType: false
            })
            .done(function (responses) {


                for (var i = 0; i < responses.length; i++) {
                    var picresponse = responses[i];
                    addnewimage(picresponse.Urlpic, picresponse.Id);

                    //var imgurl = "<img class='img-fluid' src='/Content/images/" + picresponse.Urlpic + "'/>";
                    // $newimagehtml = $("#imagetemplate").clone();
                    //$("#picturearea").append(imgurl); picid = picid + "," + picresponse.Id;
                }


        });
    });
    function addnewimage(url, id)

    {
        $newimagehtml = $("#imagetemplate").clone();
        $newimagehtml.find(".image").attr("src", "/Images/Restaurant/" + url);
        $newimagehtml.find(".image").attr("data-id", id);

        $("#picturearea").append($newimagehtml.html());
        Removeimage()
    }
    function Removeimage()
    {
        $("#picturearea .image").click(function()
            {
            $(this).remove();
        });

    }
            </script>


        }
